name: Release Build

on:
  push:
    # tags:
    #   - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        include:
          - goos: windows
            ext: .exe
          - goos: linux
            ext: ''
          - goos: darwin
            ext: ''
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.x'

      - name: Build
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o strftime-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}

      - name: ls
        run: |
          ls -al

      - uses: actions/upload-artifact@master
        with:
          name: strftime-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}
          path: strftime-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}

  release-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: ls
        run: |
          ls -al

      # - name: Upload Artifact
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ needs.create-release.outputs.upload_url }}
      #     asset_path: ./strftime-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}
      #     asset_name: strftime-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}
      #     asset_content_type: application/octet-stream
