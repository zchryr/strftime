name: Release Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ${{ matrix.goos }} - ${{ matrix.goarch}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        include:
          - goos: windows
            ext: .exe
          - goos: linux
            ext: ''
          - goos: darwin
            ext: ''
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5.0.0
        with:
          go-version: '1.x'

      - name: Build
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o strftime-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}

      - name: ls
        run: |
          ls -al

      - uses: actions/upload-artifact@master
        with:
          name: strftime-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}
          path: strftime-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}

  release-and-upload:
    name: Release & Upload Artifacts
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4.1.0

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'strftime-*/*'
          generateReleaseNotes: true
          makeLatest: true
          name: '${{ github.ref_name }}'
